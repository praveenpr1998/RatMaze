HTML:
Create a html with below inputs
  Max size of matrix
   Number of blocked walls

 Buttons:
  Generate maze,
   Start
   Pause
   Reset



Logic:

Functions needed:

GenerateMaze
DrawMaze
SolveMaze
moveRat
ResetGame




GenareteMaze
Based on the input size(n*n) create the initial start(0,0) and end position (n-1,n-1)

Set the initial rat pos as start

In a loop with a range of blocked walls
Create a random row and col index 
Where the indices should not be  1 and start and end 


This will create a maze 2d array with walls , start ,end and initial rat position

Draw function
Based on the value of maze[I][j] this will create element and its styles
0 -> empty grid
1 -> blocked wall
[0][0] = > start grid
[n-1][n-1] -> end grid



Solve function

 A move can be done in 4 possible ways
Up,donw ,left, right
Create a array with these possible direction indices

(This will be looped every time to find the possible next step )

Create a visited Set to keep track of all the visited indices

Create an interval to call the move every 2 seconds 


Move function
Checks to be made
-> if passed donâ€™t run

-> if current pos is end[n-1][n-1] return as victory

-> if stack which keeps the route came is 0 ( which means it tried all possible 4 directions and none satisfies the valid move) -> No Solution found


-> loop through possible directions and check for a valid move
  -> if valid -> update the current rat position, visited Set

By calling move function in interval this will get to a final answer as wither Won or n
  




